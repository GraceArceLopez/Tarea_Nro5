CalentarSarten()
Preparar(Preparar("harina","huevos"),CalentarSarten())
Preparar(Calentar(Cortar("pan")),Moler(Cortar("palta")) # pan tostado con palta
Rellenar(Preparar(Preparar("harina","huevos"), CalentarSarten ())) # Panqueques con manjar
# Cuarto y ultimo paso; servir
Servir (Preparar (Calentar (Cortar ( " pan " )), Moler (Cortar ( " palta " ))), Rellenar (Preparar ("Preparar ( " harina " , " Huevos " ), CalentarSarten ())), Preparar (Cortar ( " naranjas " )), Calentar ( " cafe " ))
Servir((Preparar(Cortar("naranjas")),Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten())),Preparar(Moler(Cortar("palta"),Calentar(Cortar("pan")))),Calentar("cafe"))
# Cuarto y ultimo paso; servir
Servir (Preparar(Calentar(Cortar("pan")),Moler(Cortar("palta"))),Rellenar(Preparar("Preparar("harina","Huevos"),CalentarSarten())),Preparar(Cortar("naranjas")),Calentar("cafe"))
# Cuarto y ultimo paso; servir
Servir(Preparar(Calentar(Cortar("pan")),Moler(Cortar("palta"))),Rellenar(Preparar("Preparar("harina","Huevos"),CalentarSarten())),Preparar(Cortar("naranjas")),Calentar("cafe"))
Servir(Preparar(Calentar(Cortar("pan")),Moler(Cortar("palta"))),Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten())),Preparar(Cortar("naranjas")),Calentar("cafe"))
# Primero:
Cortar("palta")
Cortar("naranjas")
Cortar("pan")
# Segundo:
Calentar("cafe")
Preparar(Cortar("naranjas"))
Calentar(Cortar("pan"))
Moler(Cortar("palta"))
Preparar("harina","huevos")
# Tercero:
CalentarSarten()
Preparar(Preparar("harina","huevos"),CalentarSarten ())
Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten()))
Preparar(Moler(Cortar("palta")),Calentar(Cortar("pan")))
# Cuarto:
Servir(Preparar(Calentar(Cortar("pan")),Moler(Cortar("palta"))),Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten())),Preparar(Cortar("naranjas")),Calentar("cafe"))
Servir(Preparar(Cortar("naranjas")),Preparar(Moler(Cortar("palta")),Calentar(Cortar("pan"))) ,Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten())),Calentar("cafe"))
Servir(Preparar(Cortar("naranjas")),Preparar(Moler(Cortar("palta")),Calentar(Cortar("pan"))),Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten())),Calentar("cafe"))
Servir(Preparar(Calentar(Cortar("pan")),Moler(Cortar("palta"))),Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten())),Preparar(Cortar("naranjas")),Calentar("cafe"))
Servir(Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten())),Preparar(Cortar("naranjas")),Preparar(Moler(Cortar("palta")),Calentar(Cortar("pan"))),Calentar("cafe"))
# Primero:
Cortar("palta")
Cortar("naranjas")
Cortar("pan")
# Segundo:
Calentar("cafe")
Preparar(Cortar("naranjas"))
Calentar(Cortar("pan"))
Moler(Cortar("palta"))
Preparar("harina","huevos")
# Tercero:
CalentarSarten()
Preparar(Preparar("harina","huevos"),CalentarSarten ())
Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten()))
Preparar(Moler(Cortar("palta")),Calentar(Cortar("pan")))
# Cuarto:
Servir(Preparar(Calentar(Cortar("pan")),Moler(Cortar("palta"))),Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten())),Preparar(Cortar("naranjas")),Calentar("cafe"))
Preparar("harina","huevos")
Servir(Preparar(Calentar(Cortar("pan")),Moler(Cortar("palta"))),Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten())),Preparar(Cortar("naranjas")),Calentar("cafe"))
# Primero cortar y moler palta, cortar naranjas y pan:
Cortar("palta")
Moler(Cortar("palta"))
Cortar("naranjas")
Cortar("pan")
# Segundo calentar café, prepara jugo de naranjas, hacer pan tostado y preparar masa de panqueques:
Calentar("cafe")
Preparar(Cortar("naranjas"))
Calentar(Cortar("pan"))
Preparar("harina","huevos")
# Tercero calentar sarten para prepara panqueques y rellenarlos con manjar, y preprar pan con palta:
CalentarSarten()
Preparar(Preparar("harina","huevos"),CalentarSarten ())
Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten()))
Preparar(Moler(Cortar("palta")),Calentar(Cortar("pan")))
# Cuarto y ultimo paso servir, pan con palta, panqueques con manjar, jugo de naranjas y café:
Servir(Preparar(Calentar(Cortar("pan")),Moler(Cortar("palta"))),Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten())),Preparar(Cortar("naranjas")),Calentar("cafe"))
# Primero cortar y moler palta, cortar naranjas y pan:
Cortar("palta")
Moler(Cortar("palta"))
Cortar("naranjas")
Cortar("pan")
# Segundo calentar café, prepara jugo de naranjas, hacer pan tostado y preparar masa de panqueques:
Calentar("cafe")
Preparar(Cortar("naranjas"))
Preparar("harina","huevos")
Calentar(Cortar("pan"))
# Tercero calentar sarten para prepara panqueques y rellenarlos con manjar, y preprar pan con palta:
CalentarSarten()
Preparar(Preparar("harina","huevos"),CalentarSarten ())
Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten()))
Preparar(Moler(Cortar("palta")),Calentar(Cortar("pan")))
# Cuarto y ultimo paso, servir pan con palta, panqueques con manjar, jugo de naranjas y café caliente:
Servir(Preparar(Calentar(Cortar("pan")),Moler(Cortar("palta"))),Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten())),Preparar(Cortar("naranjas")),Calentar("cafe"))
# Primero cortar y moler palta, cortar naranjas y pan:
Cortar("palta")
Moler(Cortar("palta"))
Cortar("naranjas")
Cortar("pan")
# Segundo calentar café, prepara jugo de naranjas, preparar masa de panqueques y hacer pan tostado:
Calentar("cafe")
Preparar(Cortar("naranjas"))
Preparar("harina","huevos")
Calentar(Cortar("pan"))
# Tercero: Peprar pan con palta,calentar sarten para preparar panqueques y rellenarlos con manjar:
Preparar(Moler(Cortar("palta")),Calentar(Cortar("pan")))
CalentarSarten()
Preparar(Preparar("harina","huevos"),CalentarSarten ())
Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten()))
# Cuarto y ultimo paso, servir pan con palta, panqueques con manjar, jugo de naranjas y café caliente:
Servir(Preparar(Calentar(Cortar("pan")),Moler(Cortar("palta"))),Rellenar(Preparar(Preparar("harina","huevos"),CalentarSarten())),Preparar(Cortar("naranjas")),Calentar("cafe"))
setwd("~/Accidentes-Laborales")
setwd("~/Tarea_Nro5")
# Usando la libreria rvest
##########################################################
######### Iniciando la extracción de información #########
##########################################################
library('rvest')
# Iniciando la variable archivo con el nombre de mi pagina
archivo <-'Pag_Web.html'
# Leyendo el HTML del archivo
webpage <- read_html(archivo)
# Eliminando los \n, comillas("), puntos(.) y comas (,) del texto
textoNoticia <- gsub("\n","",textoNoticia)
textoNoticia <- gsub("\"","",textoNoticia)
textoNoticia <- gsub("[.]","",textoNoticia)
textoNoticia <- gsub(",","",textoNoticia)
textoNoticia <- gsub("&acute;","á",textoNoticia)
textoNoticia <- gsub("&acute;","é",textoNoticia)
textoNoticia <- gsub("&acute;","í",textoNoticia)
textoNoticia <- gsub("&acute;","ó",textoNoticia)
#Extrayendo contenido en la clase justificado
contenidoWebNoticia <- html_nodes(webpage,'p')
#Pasando la info a texto
textoNoticia <- html_text(contenidoWebNoticia)
#Extrayendo contenido en la clase justificado
contenidoWebNoticia <- html_nodes(webpage,'p')
View(contenidoWebNoticia)
View(contenidoWebNoticia)
textoNoticia <- html_text(contenidoWebNoticia)
textoNoticia <- gsub("\n","",textoNoticia)
textoNoticia <- gsub("\"","",textoNoticia)
textoNoticia <- gsub("[.]","",textoNoticia)
textoNoticia <- gsub(",","",textoNoticia)
textoNoticia <- gsub("&acute;","á",textoNoticia)
textoNoticia <- gsub("&acute;","é",textoNoticia)
textoNoticia <- gsub("&acute;","í",textoNoticia)
textoNoticia <- gsub("&acute;","ó",textoNoticia)
textoNoticia <- gsub("&acute;","ú",textoNoticia)
textoNoticia <- gsub("\r","",textoNoticia)
textoNoticia <- gsub(";","",textoNoticia)
#Viendo a priori la info en la variable textoNoticia
print(textoNoticia)
for(i in 1 : length(textoNoticia)){
textoCompleto <- paste(textoCompleto," ",textoNoticia[i])
}
splitEspacioNoticia <- strsplit(textoCompleto," ")[[1]]
textoCompleto <- ""
for(i in 1 : length(textoNoticia)){
textoCompleto <- paste(textoCompleto," ",textoNoticia[i])
}
splitEspacioNoticia <- strsplit(textoCompleto," ")[[1]]
#Pasando todas las palabras a minúsculas
splitEspacioNoticia <- tolower(splitEspacioNoticia)
#Contando palabras
unlistNoticias <- unlist(splitEspacioNoticia)
tablaPalabras <- table(unlistNoticias)
#Pasando la información a una data frame
dfPalabrasNoticia <-as.data.frame(tablaPalabras)
#Extrayendo contenido de la tabla a través del tag table
tablaProductos <- html_nodes(webpage,'table')
#Extrayendo los elementos de la tabla
tablaProductosExtraidos <- html_table(tablaProductos[[1]])
#Pasando la información a data  frame
dfPalabraNoticia <- as.data.frame(tablaPalabras)
#Almacenando la información en csv
write.csv(dfPalabraNoticia, file = 'PalabrasNoticia.csv')
install.packages('ggplot2')
#Viendo a priori la info en la variable textoNoticia
print(textoNoticia)
write.table(dfPalabraNoticia, file = 'PalabrasNoticia.txt')
#Viendo el contenido de la posicióm 1,2 de la tabla
print(tablaProductosExtraidos[1,2])
# Extrayendo los elementos que contienen las tablas
tablaProductos <- html_nodes(webpage, ".productos")
# Extraccio de el contenido de las tablas usando el tag table
contenedorDeTablas <- html_nodes(tablaProductos, "table")
# ExtracciÃ³n informaciÃ³n tabla 1
tabla1 <- html_table(contenedorDeTablas[1][[1]])
#Viendo el contenido de la posicióm 1,2 de la tabla
print(tablaProductosExtraidos[1,2])
# ExtracciÃ³n informaciÃ³n tabla 1
tabla1 <- html_table(contenedorDeTablas[1][[1]])
# ExtracciÃ³n informaciÃ³n tabla 1
tabla1 <- html_table(contenedorDeTablas[1][[2]])
# Extracción información tabla 1
tabla1 <- html_table(contenedorDeTablas[1][[1]])
# Extrayendo los elementos que contienen las tablas
tablaProductos <- html_nodes(webpage, ".producto")
# Extraccio de el contenido de las tablas usando el tag table
contenedorDeTablas <- html_nodes(tablaProductos, "table")
# Extracción información tabla 1
tabla1 <- html_table(contenedorDeTablas[1][[1]])
contenedorDeTablas <- html_nodes(tablaProductos, ".table")
# Extracción información tabla 1
tabla1 <- html_table(contenedorDeTablas[1][[1]])
View(tablaProductos)
View(tablaProductos)
# Extraccio de el contenido de las tablas usando el tag table
contenedorDeTablas <- html_nodes(tablaProductos,"table")
View(contenedorDeTablas)
View(contenedorDeTablas)
View(contenidoWebNoticia)
View(contenidoWebNoticia)
#Viendo el contenido de la posicióm 1,2 de la tabla
print(tablaProductosExtraidos[1,2])
# Extracción información tabla 1
tablaProductosExtraidos <- html_table(contenedorDeTablas[1][[1]])
# Extraccio de el contenido de las tablas usando el tag table
contenedorDeTablas <- html_nodes(tablaProductos,".table")
# Extracción información tabla 1
tablaProductosExtraidos <- html_table(contenedorDeTablas[1][[1]])
# Extraccio de el contenido de las tablas usando el tag table
contenedorDeTablas <- html_nodes(tablaProductosExtraidos,".table")
# Extracción información tabla 1
tablaProductosExtraidos <- html_table(contenedorDeTablas[1][[1]])
#Viendo el contenido de la posicióm 1,2 de la tabla
print(tablaProductosExtraidos[1,2])
# Extraccio de el contenido de las tablas usando el tag table
contenedorDeTablas <- html_nodes(tablaProductosExtraidos,".table")
# Extraccio de el contenido de las tablas usando el tag table
contenedorDeTablas <- html_nodes(tablaProductosExtraidos,".table")
# Extraccio de el contenido de las tablas usando el tag table
contenedorDeTablas <- html_nodes(tablaProductos,".table")
# Extracción información tabla 1
tablaProductos <- html_table(contenedorDeTablas[1][[1]])
install.packages('ggplot2')
#Graficando los productos
library('ggplot2')
tablaProductosExtraidos$Precio <- gsub("//$","",tablaProductosExtraidos$Precio)
tablaProductosExtraidos$Precio <- gsub("[.]","",tablaProductosExtraidos$Valor)
tablaProductosExtraidos$Precio <- as.numeric(gsub(",",".",tablaProductosExtraidos$Valor))
# Limpiando $ comas y cambios de puntos por coma
tablaProductosExtraidos$Precio <- gsub("//$","",tablaProductosExtraidos$Precio)
tablaProductosExtraidos$Precio <- gsub("[.]","",tablaProductosExtraidos$Valor)
tablaProductosExtraidos$Precio <- as.numeric(gsub(",",".",tablaProductosExtraidos$Valor))
tablaProductosExtraidos$Precio <- as.numeric(gsub(",",".",tablaProductosExtraidos$Valor))
# Combinando los dos data frames y creando un tercer data frame
tablaMerge <- rbind(tabla1,tabla2)
tablaProductosExtraidos %>%
ggplot() +
aes(x = Producto, y= Precio) +
geom_bar(stat="identify")
#Gráfico Barra
tablaProducto %>%
ggplot() +
aes(x = Producto, y= Precio) +
geom_bar(stat="identify")
# Limpiando $ comas y cambios de puntos por coma
tablaProductosExtraidos$Precio <- gsub("//$","",tablaProductosExtraidos$Precio)
tablaProductosExtraidos$Precio <- gsub("[.]","",tablaProductosExtraidos$Valor)
tablaProductosExtraidos$Precio <- as.numeric(gsub(",",".",tablaProductosExtraidos$Valor))
# Combinando los dos data frames y creando un tercer data frame
tablaMerge <- rbind(tabla1,tabla2)
barplot(tablaProductosExtraidos)
#Gráfico Barra
tablaProductosExtraidos %>%
ggplot() +
aes(x = Producto, y= Precio) +
geom_bar(stat="identify")
# Limpiando $ comas y cambios de puntos por coma
tablaProductosExtraidos$Precio <- gsub("//$","",tablaProductos$Precio)
#Contando palabras
unlistNoticias <- unlist(splitEspacioNoticia)
tablaPalabras <- table(unlistNoticias)
#Extrayendo contenido de la tabla a través del tag table
tabla <- html_nodes(webpage,'table')
#Extrayendo los elementos de la tabla
tablaProductosExtraidos <- html_table(tabla[[1]])
#Pasando la información a data  frame
dfPalabraNoticia <- as.data.frame(tablaPalabras)
print(tabla)
#Extrayendo los elementos de la tabla
tablaWeb <- html_table(tabla[[1]])
print (tablaWeb)
#Pasando la información a tabla
tablaWeb <- html_table(tabla)[[1]]
print(tablaWeb)
#Pasando la información a data  frame
dfPalabraNoticia <- as.data.frame(tablaWeb)
#Almacenando la información en csv
write.csv(dfPalabraNoticia, file = 'PalabrasNoticia.csv')
#Viendo el contenido de la posicióm 1,2 de la tabla
print(tablaWeb[1,2])
# Limpiando $ comas y cambios de puntos por coma
tablaWeb$Precio <- gsub("//$","",tablaProductos$Precio)
# Limpiando $ comas y cambios de puntos por coma
DataFrameTabla <- gsub("//$","",tablaProductos$Precio)
DataFrameTabla <- gsub("[.]","",tablaProductosExtraidos$Valor)
DataFrameTabla <- as.numeric(gsub(",",".",tablaProductosExtraidos$Valor))
#Gráfico Barra
tablaWeb %>%
ggplot() +
aes(x = Producto, y= Precio) +
geom_bar(stat="identify")
print(TituloNoticia)
TituloNoticia <- html_text(contenidoWebNoticia)
TituloWebNoticia <- html_nodes(webpage,'titulo')
print(TituloNoticia)
View(TituloWebNoticia)
View(TituloWebNoticia)
print(TituloWebNoticia)
TituloWebNoticia <- html_nodes(webpage,'Titulo')
print(TituloWebNoticia)
print(dfPalabraNoticia)
#Pasando la información a tabla
tablaWeb <- html_table(tabla)[[1]]
print(tablaWeb)
#Pasando la información a data  frame
dfPalabraNoticia <- as.data.frame(tablaWeb)
#Pasando la información a data  frame
dftabla <- as.data.frame(tablaWeb)
#Almacenando la información en csv
write.csv(dftabla, file = 'PalabrasNoticia.csv')
#o en un txt
write.table(dftabla, file = 'PalabrasNoticia.txt')
#Viendo el contenido de la posicióm 1,2 de la tabla
print(tablaWeb[1,2])
# Limpiando $ comas y cambios de puntos por coma
dftabla <- gsub("//$","",dftabla)
# Limpiando $ comas y cambios de puntos por coma
dftabla <- gsub("//$","",dftabla)
dftabla <- gsub("[.]","",dftablas)
dftabla <- as.numeric(gsub(",",".",dftabla))
# Limpiando $ comas y cambios de puntos por coma
tablaWeb$'Precios' <- gsub("//$","",tablaWeb$'Precio')
tablaWeb$'Precios' <- gsub("[.]","",tablaWeb$'Precio')
tablaWeb$'Precios' <- as.numeric(gsub(",",".",tablaWeb$'Precio'))
#Graficando los productos
library('ggplot2')
#Gráfico Barra
tablaWeb %>%
ggplot() +
aes(x = Producto, y= Precio) +
geom_bar(stat="identify")
#Gráfico Barra
tablaWeb %>%
ggplot() +
aes(x = Producto, y= 'Precio') +
geom_bar(stat="identify")
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
#Grafico con los datos
#Limpiar tabla
TablaWeb$`Precios` <- gsub("\\$","",TablaWeb$`Precios`)
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
#Grafico con los datos
#Limpiar tabla
TablaWeb$`Precios` <- gsub("\\$","",TablaWeb$`Precios`)
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
#Grafico con los datos
#Limpiar tabla
TablaWeb$`Precios` <- gsub("\\$","",TablaWeb$`Precios`)
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
#Grafico con los datos
#Limpiar tabla
TablaWeb$'Precios` <- gsub("\\$","",TablaWeb$`Precios`)
TablaWeb$'Precios` <- gsub("[.]","",TablaWeb$`Precios`)
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
#Grafico con los datos
#Limpiar tabla
TablaWeb$'Precios` <- gsub("\\$","",TablaWeb$`Precios`)
TablaWeb$'Precios` <- gsub("[.]","",TablaWeb$`Precios`)
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
#Grafico con los datos
#Limpiar tabla
TablaWeb$'Precios` <- gsub("\\$","",TablaWeb$`Precios`)
TablaWeb$'Precios` <- gsub("[.]","",TablaWeb$`Precios`)
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
#Grafico con los datos
#Limpiar tabla
TablaWeb$'Precios' <- gsub("\\$","",TablaWeb$`Precios`)
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
#Grafico con los datos
#Limpiar tabla
TablaWeb$'Precios' <- gsub("\\$","",TablaWeb$`Precios`)
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
#Grafico con los datos
#Limpiar tabla
TablaWeb$'Precios' <- gsub("\\$","",TablaWeb$'Precios')
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
#Grafico con los datos
#Limpiar tabla
tablaWeb$'Precios' <- gsub("\\$","",tablaWeb$'Precios')
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
#Grafico con los datos
#Limpiar tabla
tablaWeb$'Precios'<- gsub("\\$","",tablaWeb$'Precios')
tablaWeb$'Precios'
tablaWeb$'Precios'
tablaWeb$'Precios'<
TablaWeb
tablaWeb$'Precios'<- gsub("\\$","",tablaWeb$'Precios')
# Limpiando $ comas y cambios de puntos por coma
tablaWeb$'Precios' <- gsub("//$","",tablaWeb$'Precio')
tablaWeb$'Precios' <- gsub("[.]","",tablaWeb$'Precio')
tablaWeb$'Precios' <- as.numeric(gsub(",",".",tablaWeb$'Precio'))
install.packages('ggplot2')
install.packages("ggplot2")
#Graficando los productos
library('ggplot2')
library('ggplot2')
#Gráfico Barra
tablaWeb %>%
ggplot() +
aes(x = Producto, y= 'Precio') +
geom_bar(stat="identify")
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
tablaWeb %>%
ggplot() +
aes(x = Producto, y= 'Precio') +
geom_bar(stat="identify")
install.packages('ggplot2')
#Graficando los productos
library('ggplot2')
#Graficando los productos
library('ggplot2')
#Gráfico Barra
tablaWeb %>%
ggplot() +
aes(x = Producto, y= 'Precio') +
geom_bar(stat="identify")
#Gráfico Barra
tablaWeb %>%
ggplot() +
aes(x = Producto, y= 'Precio') +
geom_bar(stat="identify")
#Gráfico Barra
tablaWeb %>%
ggplot() +
aes(x = Producto, y= 'Precio') +
geom_bar(stat="identify")
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
# Combinando los dos data frames y creando un tercer data frame
tablaMerge <- rbind(tabla1,tabla2)
# Combinando los dos data frames y creando un tercer data frame
tablaMerge <- rbind(tablaWeb,tabla2)
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
theme_bw()
#Gráfico Barra
tablaWeb %>%
ggplot() +
aes(x = Producto, y= 'Precio') +
geom_bar(stat="identify")
#Gráfico boxplot
tablaWeb %>%
ggplot() +
geom_boxplot(aes(x = Producto, y = 'Precio')) +
theme_bw()
#Gráfico Barra
tablaWeb %>%
ggplot() +
aes(x = Producto, y = 'Precio') +
geom_bar(stat="identify")
#Gráfico Barra
tablaWeb %>%
ggplot() +
aes(x = Producto, y = 'Precio') +
geom_bar(stat="identity")
TituloNoticia <- html_nodes(webpage,'h1')
TituloNoticia <- html_nodes(webpage,'h1')
TituloNoticia
#Pasando la info a texto
textoNoticia <- html_text(contenidoWebNoticia)
#Pasando la info a texto
textoNoticia
